/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.arthursn.systemetl.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Funcionario extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6595249268818428376L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Funcionario\",\"namespace\":\"com.arthursn.systemetl.avro\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"nome\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"telefone\",\"type\":\"string\"},{\"name\":\"cargo\",\"type\":\"string\"},{\"name\":\"departamento\",\"type\":\"string\"},{\"name\":\"salario\",\"type\":\"double\"},{\"name\":\"data_admissao\",\"type\":\"string\"},{\"name\":\"cidade\",\"type\":\"string\"},{\"name\":\"senioridade\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Funcionario> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Funcionario> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Funcionario> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Funcionario> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Funcionario> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Funcionario to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Funcionario from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Funcionario instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Funcionario fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private int id;
  private java.lang.CharSequence nome;
  private java.lang.CharSequence email;
  private java.lang.CharSequence telefone;
  private java.lang.CharSequence cargo;
  private java.lang.CharSequence departamento;
  private double salario;
  private java.lang.CharSequence data_admissao;
  private java.lang.CharSequence cidade;
  private java.lang.CharSequence senioridade;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Funcionario() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param nome The new value for nome
   * @param email The new value for email
   * @param telefone The new value for telefone
   * @param cargo The new value for cargo
   * @param departamento The new value for departamento
   * @param salario The new value for salario
   * @param data_admissao The new value for data_admissao
   * @param cidade The new value for cidade
   * @param senioridade The new value for senioridade
   */
  public Funcionario(java.lang.Integer id, java.lang.CharSequence nome, java.lang.CharSequence email, java.lang.CharSequence telefone, java.lang.CharSequence cargo, java.lang.CharSequence departamento, java.lang.Double salario, java.lang.CharSequence data_admissao, java.lang.CharSequence cidade, java.lang.CharSequence senioridade) {
    this.id = id;
    this.nome = nome;
    this.email = email;
    this.telefone = telefone;
    this.cargo = cargo;
    this.departamento = departamento;
    this.salario = salario;
    this.data_admissao = data_admissao;
    this.cidade = cidade;
    this.senioridade = senioridade;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return nome;
    case 2: return email;
    case 3: return telefone;
    case 4: return cargo;
    case 5: return departamento;
    case 6: return salario;
    case 7: return data_admissao;
    case 8: return cidade;
    case 9: return senioridade;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: nome = (java.lang.CharSequence)value$; break;
    case 2: email = (java.lang.CharSequence)value$; break;
    case 3: telefone = (java.lang.CharSequence)value$; break;
    case 4: cargo = (java.lang.CharSequence)value$; break;
    case 5: departamento = (java.lang.CharSequence)value$; break;
    case 6: salario = (java.lang.Double)value$; break;
    case 7: data_admissao = (java.lang.CharSequence)value$; break;
    case 8: cidade = (java.lang.CharSequence)value$; break;
    case 9: senioridade = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public int getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(int value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'nome' field.
   * @return The value of the 'nome' field.
   */
  public java.lang.CharSequence getNome() {
    return nome;
  }


  /**
   * Sets the value of the 'nome' field.
   * @param value the value to set.
   */
  public void setNome(java.lang.CharSequence value) {
    this.nome = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'telefone' field.
   * @return The value of the 'telefone' field.
   */
  public java.lang.CharSequence getTelefone() {
    return telefone;
  }


  /**
   * Sets the value of the 'telefone' field.
   * @param value the value to set.
   */
  public void setTelefone(java.lang.CharSequence value) {
    this.telefone = value;
  }

  /**
   * Gets the value of the 'cargo' field.
   * @return The value of the 'cargo' field.
   */
  public java.lang.CharSequence getCargo() {
    return cargo;
  }


  /**
   * Sets the value of the 'cargo' field.
   * @param value the value to set.
   */
  public void setCargo(java.lang.CharSequence value) {
    this.cargo = value;
  }

  /**
   * Gets the value of the 'departamento' field.
   * @return The value of the 'departamento' field.
   */
  public java.lang.CharSequence getDepartamento() {
    return departamento;
  }


  /**
   * Sets the value of the 'departamento' field.
   * @param value the value to set.
   */
  public void setDepartamento(java.lang.CharSequence value) {
    this.departamento = value;
  }

  /**
   * Gets the value of the 'salario' field.
   * @return The value of the 'salario' field.
   */
  public double getSalario() {
    return salario;
  }


  /**
   * Sets the value of the 'salario' field.
   * @param value the value to set.
   */
  public void setSalario(double value) {
    this.salario = value;
  }

  /**
   * Gets the value of the 'data_admissao' field.
   * @return The value of the 'data_admissao' field.
   */
  public java.lang.CharSequence getDataAdmissao() {
    return data_admissao;
  }


  /**
   * Sets the value of the 'data_admissao' field.
   * @param value the value to set.
   */
  public void setDataAdmissao(java.lang.CharSequence value) {
    this.data_admissao = value;
  }

  /**
   * Gets the value of the 'cidade' field.
   * @return The value of the 'cidade' field.
   */
  public java.lang.CharSequence getCidade() {
    return cidade;
  }


  /**
   * Sets the value of the 'cidade' field.
   * @param value the value to set.
   */
  public void setCidade(java.lang.CharSequence value) {
    this.cidade = value;
  }

  /**
   * Gets the value of the 'senioridade' field.
   * @return The value of the 'senioridade' field.
   */
  public java.lang.CharSequence getSenioridade() {
    return senioridade;
  }


  /**
   * Sets the value of the 'senioridade' field.
   * @param value the value to set.
   */
  public void setSenioridade(java.lang.CharSequence value) {
    this.senioridade = value;
  }

  /**
   * Creates a new Funcionario RecordBuilder.
   * @return A new Funcionario RecordBuilder
   */
  public static com.arthursn.systemetl.avro.Funcionario.Builder newBuilder() {
    return new com.arthursn.systemetl.avro.Funcionario.Builder();
  }

  /**
   * Creates a new Funcionario RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Funcionario RecordBuilder
   */
  public static com.arthursn.systemetl.avro.Funcionario.Builder newBuilder(com.arthursn.systemetl.avro.Funcionario.Builder other) {
    if (other == null) {
      return new com.arthursn.systemetl.avro.Funcionario.Builder();
    } else {
      return new com.arthursn.systemetl.avro.Funcionario.Builder(other);
    }
  }

  /**
   * Creates a new Funcionario RecordBuilder by copying an existing Funcionario instance.
   * @param other The existing instance to copy.
   * @return A new Funcionario RecordBuilder
   */
  public static com.arthursn.systemetl.avro.Funcionario.Builder newBuilder(com.arthursn.systemetl.avro.Funcionario other) {
    if (other == null) {
      return new com.arthursn.systemetl.avro.Funcionario.Builder();
    } else {
      return new com.arthursn.systemetl.avro.Funcionario.Builder(other);
    }
  }

  /**
   * RecordBuilder for Funcionario instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Funcionario>
    implements org.apache.avro.data.RecordBuilder<Funcionario> {

    private int id;
    private java.lang.CharSequence nome;
    private java.lang.CharSequence email;
    private java.lang.CharSequence telefone;
    private java.lang.CharSequence cargo;
    private java.lang.CharSequence departamento;
    private double salario;
    private java.lang.CharSequence data_admissao;
    private java.lang.CharSequence cidade;
    private java.lang.CharSequence senioridade;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.arthursn.systemetl.avro.Funcionario.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.nome)) {
        this.nome = data().deepCopy(fields()[1].schema(), other.nome);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.email)) {
        this.email = data().deepCopy(fields()[2].schema(), other.email);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.telefone)) {
        this.telefone = data().deepCopy(fields()[3].schema(), other.telefone);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.cargo)) {
        this.cargo = data().deepCopy(fields()[4].schema(), other.cargo);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.departamento)) {
        this.departamento = data().deepCopy(fields()[5].schema(), other.departamento);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.salario)) {
        this.salario = data().deepCopy(fields()[6].schema(), other.salario);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.data_admissao)) {
        this.data_admissao = data().deepCopy(fields()[7].schema(), other.data_admissao);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.cidade)) {
        this.cidade = data().deepCopy(fields()[8].schema(), other.cidade);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.senioridade)) {
        this.senioridade = data().deepCopy(fields()[9].schema(), other.senioridade);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing Funcionario instance
     * @param other The existing instance to copy.
     */
    private Builder(com.arthursn.systemetl.avro.Funcionario other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nome)) {
        this.nome = data().deepCopy(fields()[1].schema(), other.nome);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.email)) {
        this.email = data().deepCopy(fields()[2].schema(), other.email);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.telefone)) {
        this.telefone = data().deepCopy(fields()[3].schema(), other.telefone);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.cargo)) {
        this.cargo = data().deepCopy(fields()[4].schema(), other.cargo);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.departamento)) {
        this.departamento = data().deepCopy(fields()[5].schema(), other.departamento);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.salario)) {
        this.salario = data().deepCopy(fields()[6].schema(), other.salario);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.data_admissao)) {
        this.data_admissao = data().deepCopy(fields()[7].schema(), other.data_admissao);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.cidade)) {
        this.cidade = data().deepCopy(fields()[8].schema(), other.cidade);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.senioridade)) {
        this.senioridade = data().deepCopy(fields()[9].schema(), other.senioridade);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public int getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'nome' field.
      * @return The value.
      */
    public java.lang.CharSequence getNome() {
      return nome;
    }


    /**
      * Sets the value of the 'nome' field.
      * @param value The value of 'nome'.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder setNome(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.nome = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'nome' field has been set.
      * @return True if the 'nome' field has been set, false otherwise.
      */
    public boolean hasNome() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'nome' field.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder clearNome() {
      nome = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.email = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder clearEmail() {
      email = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'telefone' field.
      * @return The value.
      */
    public java.lang.CharSequence getTelefone() {
      return telefone;
    }


    /**
      * Sets the value of the 'telefone' field.
      * @param value The value of 'telefone'.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder setTelefone(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.telefone = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'telefone' field has been set.
      * @return True if the 'telefone' field has been set, false otherwise.
      */
    public boolean hasTelefone() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'telefone' field.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder clearTelefone() {
      telefone = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'cargo' field.
      * @return The value.
      */
    public java.lang.CharSequence getCargo() {
      return cargo;
    }


    /**
      * Sets the value of the 'cargo' field.
      * @param value The value of 'cargo'.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder setCargo(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.cargo = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'cargo' field has been set.
      * @return True if the 'cargo' field has been set, false otherwise.
      */
    public boolean hasCargo() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'cargo' field.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder clearCargo() {
      cargo = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'departamento' field.
      * @return The value.
      */
    public java.lang.CharSequence getDepartamento() {
      return departamento;
    }


    /**
      * Sets the value of the 'departamento' field.
      * @param value The value of 'departamento'.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder setDepartamento(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.departamento = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'departamento' field has been set.
      * @return True if the 'departamento' field has been set, false otherwise.
      */
    public boolean hasDepartamento() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'departamento' field.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder clearDepartamento() {
      departamento = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'salario' field.
      * @return The value.
      */
    public double getSalario() {
      return salario;
    }


    /**
      * Sets the value of the 'salario' field.
      * @param value The value of 'salario'.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder setSalario(double value) {
      validate(fields()[6], value);
      this.salario = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'salario' field has been set.
      * @return True if the 'salario' field has been set, false otherwise.
      */
    public boolean hasSalario() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'salario' field.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder clearSalario() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'data_admissao' field.
      * @return The value.
      */
    public java.lang.CharSequence getDataAdmissao() {
      return data_admissao;
    }


    /**
      * Sets the value of the 'data_admissao' field.
      * @param value The value of 'data_admissao'.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder setDataAdmissao(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.data_admissao = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'data_admissao' field has been set.
      * @return True if the 'data_admissao' field has been set, false otherwise.
      */
    public boolean hasDataAdmissao() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'data_admissao' field.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder clearDataAdmissao() {
      data_admissao = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'cidade' field.
      * @return The value.
      */
    public java.lang.CharSequence getCidade() {
      return cidade;
    }


    /**
      * Sets the value of the 'cidade' field.
      * @param value The value of 'cidade'.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder setCidade(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.cidade = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'cidade' field has been set.
      * @return True if the 'cidade' field has been set, false otherwise.
      */
    public boolean hasCidade() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'cidade' field.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder clearCidade() {
      cidade = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'senioridade' field.
      * @return The value.
      */
    public java.lang.CharSequence getSenioridade() {
      return senioridade;
    }


    /**
      * Sets the value of the 'senioridade' field.
      * @param value The value of 'senioridade'.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder setSenioridade(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.senioridade = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'senioridade' field has been set.
      * @return True if the 'senioridade' field has been set, false otherwise.
      */
    public boolean hasSenioridade() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'senioridade' field.
      * @return This builder.
      */
    public com.arthursn.systemetl.avro.Funcionario.Builder clearSenioridade() {
      senioridade = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Funcionario build() {
      try {
        Funcionario record = new Funcionario();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.nome = fieldSetFlags()[1] ? this.nome : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.email = fieldSetFlags()[2] ? this.email : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.telefone = fieldSetFlags()[3] ? this.telefone : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.cargo = fieldSetFlags()[4] ? this.cargo : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.departamento = fieldSetFlags()[5] ? this.departamento : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.salario = fieldSetFlags()[6] ? this.salario : (java.lang.Double) defaultValue(fields()[6]);
        record.data_admissao = fieldSetFlags()[7] ? this.data_admissao : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.cidade = fieldSetFlags()[8] ? this.cidade : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.senioridade = fieldSetFlags()[9] ? this.senioridade : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Funcionario>
    WRITER$ = (org.apache.avro.io.DatumWriter<Funcionario>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Funcionario>
    READER$ = (org.apache.avro.io.DatumReader<Funcionario>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.id);

    out.writeString(this.nome);

    out.writeString(this.email);

    out.writeString(this.telefone);

    out.writeString(this.cargo);

    out.writeString(this.departamento);

    out.writeDouble(this.salario);

    out.writeString(this.data_admissao);

    out.writeString(this.cidade);

    out.writeString(this.senioridade);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readInt();

      this.nome = in.readString(this.nome instanceof Utf8 ? (Utf8)this.nome : null);

      this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);

      this.telefone = in.readString(this.telefone instanceof Utf8 ? (Utf8)this.telefone : null);

      this.cargo = in.readString(this.cargo instanceof Utf8 ? (Utf8)this.cargo : null);

      this.departamento = in.readString(this.departamento instanceof Utf8 ? (Utf8)this.departamento : null);

      this.salario = in.readDouble();

      this.data_admissao = in.readString(this.data_admissao instanceof Utf8 ? (Utf8)this.data_admissao : null);

      this.cidade = in.readString(this.cidade instanceof Utf8 ? (Utf8)this.cidade : null);

      this.senioridade = in.readString(this.senioridade instanceof Utf8 ? (Utf8)this.senioridade : null);

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readInt();
          break;

        case 1:
          this.nome = in.readString(this.nome instanceof Utf8 ? (Utf8)this.nome : null);
          break;

        case 2:
          this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);
          break;

        case 3:
          this.telefone = in.readString(this.telefone instanceof Utf8 ? (Utf8)this.telefone : null);
          break;

        case 4:
          this.cargo = in.readString(this.cargo instanceof Utf8 ? (Utf8)this.cargo : null);
          break;

        case 5:
          this.departamento = in.readString(this.departamento instanceof Utf8 ? (Utf8)this.departamento : null);
          break;

        case 6:
          this.salario = in.readDouble();
          break;

        case 7:
          this.data_admissao = in.readString(this.data_admissao instanceof Utf8 ? (Utf8)this.data_admissao : null);
          break;

        case 8:
          this.cidade = in.readString(this.cidade instanceof Utf8 ? (Utf8)this.cidade : null);
          break;

        case 9:
          this.senioridade = in.readString(this.senioridade instanceof Utf8 ? (Utf8)this.senioridade : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










